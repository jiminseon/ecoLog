<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="model.dao.mybatis.mapper.PostMapper">
<cache />
	 <select id="postListData" resultType="POST" parameterType="hashmap">
     SELECT postnum, title, writer, post_category, post_contents, TO_CHAR(write_date,'YYYY-MM-DD') as regDate, visitcnt 
     FROM (SELECT postnum, title, writer, post_category, post_contents, write_date, visitcnt, rownum as num 
     FROM (SELECT postnum, title, writer, post_category, post_contents, write_date, visitcnt
     FROM POST ORDER BY postnum DESC))
     WHERE num BETWEEN #{start} AND #{end}
  	</select>
  	
  	<select id="postTotalPage" resultType="int">
    	SELECT CEIL(COUNT(*)/10.0) FROM POST
  	</select>
  	
  	<sql id="where-postnum">
    	WHERE postnum = #{postnum}
  	</sql>
  	
  	<!-- 조회수 증가 -->
  	<update id="viewIncrement" parameterType="int">
	    UPDATE POST SET
	    visitcnt = visitcnt + 1
	    <include refid="where-postnum"/>
	</update>
	
	<!-- 실제 데이터 읽기 -->
    <select id="postDetailData" resultType="Post" parameterType="int">
    	SELECT postnum, title, writer, post_category, post_contents, 
    	TO_CHAR(write_date,'YYYY-MM-DD') as regDate, visitcnt
    	FROM POST
    	<include refid="where-postnum"/>
    </select>
    
    <!-- 데이터 삽입 -->
    <insert id="postInsert" parameterType="Post">
    <selectKey keyProperty="no" resultType="int" order="BEFORE">
      SELECT NVL(MAX(postnum) + 1, 1) FROM POST
    </selectKey>
    INSERT INTO POST VALUES(
      #{postnum},
      #{title},
      #{writer},
      #{post_category},
      #{post_contents},
      SYSDATE, 
      0)
    </insert>
    
    <!-- 수정하기 -->
    <update id="postUpdate" parameterType="Post">
      UPDATE POST SET
      title = #{title},
      post_contents = #{post_contents}
      <include refid="where-postnum"/>
    </update>
    
	<!--     비밀번호 확인하고 삭제하기
    <select id="boardGetPassword" resultType="String" parameterType="int">
      SELECT pwd FROM databoard1
      <include refid="where-no"/>
    </select> --> 
    
    <!-- 게시물 삭제 -->
    <delete id="postDelete" parameterType="int">
      DELETE FROM POST
      <include refid="where-postnum"/>
    </delete>
    
    <!-- 게시글 찾기 -->
    <select id="postFindData" resultType="Post" parameterType="hashmap">
    	SELECT postnum, title, writer, post_category,
    	TO_CHAR(writeDate,'YYYY-MM-DD') as regdate, visitcnt
    	FROM POST
    	WHERE ${fd} LIKE '%'||#{ss}||'%'
    </select>
    <select id="postFindCount" resultType="int" parameterType="hashmap">
   		SELECT COUNT(*)
    	FROM POST
    	WHERE ${fd} LIKE '%'||#{ss}||'%'
    </select>
    
	
	
	<!-- <select id="selectpostByCondition" parameterType="hashmap" resultType="Post">
		SELECT <include refid="BaseColumns"/>
		FROM POST
		<where>
			<if test="postNo != null">
				postnum = #{postNo}
			</if>
			<if test="userId != null">
				AND writer = #{userId}
			</if>
		</where>
	</select>
	
	<insert id="insertPost" parameterType="Post">
		INSERT INTO POST (postnum, title, writer, category, content, writedate)
		VALUES (#{postNo}, #{title}, #{userId}, #{category}, 
		#{content}, #{writeDate})
	</insert>

	<update id="updatePost" parameterType="Post">
		UPDATE POST
		SET content = #{content}
		WHERE postnum = #{postNo}
	</update>
	
	<delete id="deletePost" parameterType="long">
		DELETE FROM POST
		WHERE postnum = #{postNo}
	</delete>
	
	<resultMap id="associationResultMap" type="Post">
		<id column="postnum" jdbcType="NUMERIC" property="postNo" />
		<result column="writer" jdbcType="VARCHAR2" property="userId" />
		<result column="title" jdbcType="CHAR" property="title" />
		<result column="category" jdbcType="CHAR" property="category" />
		<result column="content" jdbcType="VARCHAR2" property="content" />
		<result column="writedate" jdbcType="TIMESTAMP" property="writeDate" />
		<association column="writer" property="user" javaType="User">
			<id column="writer" property="userId" />
			<result column="user_name" property="userName" />
		</association>
	</resultMap>
	
	<select id="selectCommentByPrimaryKeyAssociation" parameterType="long" 		
		resultMap="associationResultMap"> 
		SELECT c.comment_no, 
				c.user_id, 
				c.comment_content, 
				c.reg_date, 
				u.user_name, 
				u.phone, 
				u.address
		FROM COMMENTS c, USERS u			
		WHERE c.user_id = u.user_id  
		  AND c.comment_no = #{commentNo} 
	</select>
	
	<select id="selectCommentByPrimaryKeyAssociation2" parameterType="long" 		
		resultType="Comment"> 
		SELECT c.comment_no AS commentNo,
			   c.user_id AS userId,
			   c.comment_content AS commentContent,
			   c.reg_date AS regDate,
			   u.user_id AS "user.userId",	
			   u.user_name AS "user.userName", 			   
			   u.phone AS "user.phone",	
			   u.address AS "user.address"	
		FROM COMMENTS c, USERS u			
		WHERE c.user_id = u.user_id  
		  AND c.comment_no = #{commentNo} 
	</select> -->
	
</mapper>