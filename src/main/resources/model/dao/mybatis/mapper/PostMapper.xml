<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="model.dao.mybatis.mapper.PostMapper">
<cache />
	 <select id="postListData" resultType="POST" parameterType="hashmap">
     SELECT postnum, title, writer, post_category AS category, post_contents AS content, TO_CHAR(write_date,'YYYY-MM-DD') as regdate, visitcnt 
     FROM (SELECT postnum, title, writer, post_category, post_contents, write_date, visitcnt, rownum
     FROM (SELECT postnum, title, writer, post_category, post_contents, write_date, visitcnt
     FROM POST ORDER BY postnum DESC))
     WHERE rownum BETWEEN #{start} AND #{end}
  	</select>
  	
  	<select id="myPostList" resultType="POST" parameterType="String">
     SELECT postnum, title, writer, post_category AS category, post_contents AS content, TO_CHAR(write_date,'YYYY-MM-DD') as regdate, visitcnt 
     FROM (SELECT postnum, title, writer, post_category, post_contents, write_date, visitcnt, rownum
     FROM (SELECT postnum, title, writer, post_category, post_contents, write_date, visitcnt
     FROM POST ORDER BY postnum DESC))
     WHERE writer = #{name}
  	</select>
  	
  	<select id="postTotalPage" resultType="int">
    	SELECT CEIL(COUNT(*)/10.0) FROM POST
  	</select>
  	
  	<sql id="where-postnum">
    	WHERE postnum = #{postnum}
  	</sql>
  	
  	<!-- 조회수 증가 -->
  	<update id="viewIncrement" parameterType="int">
	    UPDATE POST SET
	    visitcnt = visitcnt + 1
	    <include refid="where-postnum"/>
	</update>
	
	<!-- 실제 데이터 읽기 -->
    <select id="postDetailData" resultType="Post" parameterType="int">
    	SELECT postnum, title, writer, post_category AS category, post_contents AS content, 
    	TO_CHAR(write_date,'YYYY-MM-DD') as regdate, visitcnt
    	FROM POST
    	<include refid="where-postnum"/>
    </select>
    
    <!-- 데이터 삽입 -->
    <insert id="postInsert" parameterType="Post">
    INSERT INTO POST VALUES(
      POST_SEQ.nextval,
      #{title},
      #{writer},
      #{category},
      #{content},
      DEFAULT, 
      0)
    </insert>
    
    <!-- 수정할 게시글 탐색 -->
    <select id="selectPost" parameterType="int" resultType="Post"> 
		SELECT postnum, 
		       title, 
		       writer, 
		       post_category AS category, 
		       post_contents AS content,
		       TO_CHAR(write_date,'YYYY-MM-DD') as regDate, 
		       visitcnt		        
        FROM POST         			
		<include refid="where-postnum"/>		
    </select> 
    
    <!-- 수정하기 -->
    <update id="postUpdate" parameterType="Post">
		UPDATE Post 
		SET title = #{title}, post_contents AS content= #{post_contents}, write_date AS regdate = DEFAULT
		WHERE postnum = #{postnum}		
	</update>
    <!-- <update id="postUpdate" parameterType="Post">
      UPDATE POST SET
      title = #{title},
      post_contents = #{post_contents}
      write_date = DEFAULT
      <include refid="where-postnum"/>
    </update> -->
    
	<!--     비밀번호 확인하고 삭제하기
    <select id="boardGetPassword" resultType="String" parameterType="int">
      SELECT pwd FROM databoard1
      <include refid="where-postnum"/>
    </select> --> 
    
    <!-- 게시물 삭제 -->
    <delete id="postDelete" parameterType="int">
      DELETE FROM POST
      <include refid="where-postnum"/>
    </delete>
    
    <!-- 게시글 찾기 -->
    <select id="postFindData" resultType="Post" parameterType="hashmap">
    	SELECT postnum, title, writer, post_category AS category,
    	TO_CHAR(writeDate,'YYYY-MM-DD') as regdate, visitcnt
    	FROM POST
    	WHERE ${fd} LIKE '%'||#{ss}||'%'
    </select>
    <select id="postFindCount" resultType="int" parameterType="hashmap">
   		SELECT COUNT(*)
    	FROM POST
    	WHERE ${fd} LIKE '%'||#{ss}||'%'
    </select>

    <!-- 게시글 3개만 -->
    <select id="postListLast" resultType="POST" parameterType="hashmap">
     SELECT postnum, title, writer, post_category AS category, post_contents AS content, TO_CHAR(write_date,'YYYY-MM-DD') as regdate, visitcnt 
     FROM (SELECT postnum, title, writer, post_category, post_contents, write_date, visitcnt, rownum
     FROM (SELECT postnum, title, writer, post_category, post_contents, write_date, visitcnt
     FROM POST ORDER BY postnum DESC))
     WHERE rownum  <![CDATA[ < ]]>= 3
  	</select>
	
</mapper>